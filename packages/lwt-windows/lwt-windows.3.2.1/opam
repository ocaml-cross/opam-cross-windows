opam-version: "2.0"
maintainer: [
  "Anton Bachin <antonbachin@yahoo.com>"
  "Mauricio Fernandez <mfp@acm.org>"
  "Simon Cruanes <simon.cruanes.2007@m4x.org>"
]
authors: [
  "Jérôme Vouillon"
  "Jérémie Dimino"
]
homepage: "https://github.com/ocsigen/lwt"
doc: "https://ocsigen.org/lwt/manual/"
bug-reports: "https://github.com/ocsigen/lwt/issues"
license: "LGPL with OpenSSL linking exception"
dev-repo: "git+https://github.com/ocsigen/lwt.git"
patches: [
  # windows-ocamlc -config has incorrect os_type
  "patches/os_type.patch"
]
build: [
  [ "ocaml" "src/util/configure.ml" "-use-libev" "false" ]
  [ "dune" "build"
                        "-x" "windows"
                       "-p" "lwt" "-j" jobs ]
  [ "sed" "-r" "-e" "s!(-sysroot/lib/lwt/)(unix|preemptive|log|options|syntax|simple-top|ppx)/!\\1!" "-i" "lwt-windows.install" ]
]
depends: [
  "ocaml-windows" {< "4.08.0"}
  "ocamlfind" {build}
  "cppo" {build & >= "1.1.0"}
  "ocaml-windows"
  "dune" {build & >= "1.0+beta14"}
  "ocaml-migrate-parsetree-windows"
  "ppx_tools_versioned" {>= "5.0.1"}
  "ppx_tools_versioned-windows" {>= "5.0.1"}
  "result-windows"
]
synopsis: "Cooperative threads and I/O in monadic style"
description: """
Lwt provides typed, composable cooperative threads. These make it easy to run
normally-blocking I/O operations concurrently in a single process. Also, in many
cases, Lwt threads can interact without the need for locks or other
synchronization primitives."""
extra-files: ["patches/os_type.patch" "md5=4591e8e77a95eefd436540ce10b04ff5"]
url {
  src: "https://github.com/ocsigen/lwt/archive/3.2.1.tar.gz"
  checksum: "md5=13613bbf6b27d198bafcbd9b253a0076"
}
