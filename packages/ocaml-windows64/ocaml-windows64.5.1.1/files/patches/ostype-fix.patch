diff --git a/middle_end/closure/closure.ml b/middle_end/closure/closure.ml
index b4095b7237..62d67b17d7 100644
--- a/middle_end/closure/closure.ml
+++ b/middle_end/closure/closure.ml
@@ -1080,9 +1080,9 @@ let rec close ({ backend; fenv; cenv ; mutable_vars } as env) lam =
         | Word_size -> make_const_int (8*B.size_int)
         | Int_size -> make_const_int (8*B.size_int - 1)
         | Max_wosize -> make_const_int ((1 lsl ((8*B.size_int) - 10)) - 1 )
-        | Ostype_unix -> make_const_bool (Sys.os_type = "Unix")
-        | Ostype_win32 -> make_const_bool (Sys.os_type = "Win32")
-        | Ostype_cygwin -> make_const_bool (Sys.os_type = "Cygwin")
+        | Ostype_unix -> make_const_bool false
+        | Ostype_win32 -> make_const_bool true
+        | Ostype_cygwin -> make_const_bool false
         | Backend_type ->
             make_const_int 0 (* tag 0 is the same as Native here *)
       in
diff --git a/utils/config.common.ml b/utils/config.common.ml
index d4850ffd50..182046f38b 100644
--- a/utils/config.common.ml
+++ b/utils/config.common.ml
@@ -64,11 +64,7 @@ let lazy_tag = 246
 let max_young_wosize = 256
 let stack_threshold = 32 (* see runtime/caml/config.h *)
 let stack_safety_margin = 6
-let default_executable_name =
-  match Sys.os_type with
-    "Unix" -> "a.out"
-  | "Win32" | "Cygwin" -> "camlprog.exe"
-  | _ -> "camlprog"
+let default_executable_name = "camlprog.exe"
 type configuration_value =
   | String of string
   | Int of int
@@ -107,7 +103,7 @@ let configuration_variables () =
   p "ext_asm" ext_asm;
   p "ext_lib" ext_lib;
   p "ext_dll" ext_dll;
-  p "os_type" Sys.os_type;
+  p "os_type" "Win32";
   p "default_executable_name" default_executable_name;
   p_bool "systhread_supported" systhread_supported;
   p "host" host;
diff --git a/utils/config.generated.ml.in b/utils/config.generated.ml.in
index 83d99afaa3..60708e888e 100644
--- a/utils/config.generated.ml.in
+++ b/utils/config.generated.ml.in
@@ -96,7 +96,7 @@ let asm_cfi_supported = @asm_cfi_supported@
 let with_frame_pointers = @frame_pointers@
 let reserved_header_bits = @reserved_header_bits@

-let ext_exe = {@QS@|@exeext@|@QS@}
+let ext_exe = ".exe"
 let ext_obj = "." ^ {@QS@|@OBJEXT@|@QS@}
 let ext_asm = "." ^ {@QS@|@S@|@QS@}
 let ext_lib = "." ^ {@QS@|@libext@|@QS@}
